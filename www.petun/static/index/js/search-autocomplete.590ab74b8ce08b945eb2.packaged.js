(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{113:function(e,n,t){var i=t(482);"string"==typeof i&&(i=[[e.i,i,""]]),i.locals&&(e.exports=i.locals);(0,t(19).default)("6680b082",i,!0,{})},243:function(e,n,t){var i=t(14),s=t(480),r=t(230),o="Expected a function",a=Math.max,u=Math.min;e.exports=function(e,n,t){var c,l,d,p,h,m,g=0,f=!1,$=!1,b=!0;if("function"!=typeof e)throw new TypeError(o);function y(n){var t=c,i=l;return c=l=void 0,g=n,p=e.apply(i,t)}function w(e){var t=e-m;return void 0===m||t>=n||t<0||$&&e-g>=d}function x(){var e=s();if(w(e))return A(e);h=setTimeout(x,function(e){var t=n-(e-m);return $?u(t,d-(e-g)):t}(e))}function A(e){return h=void 0,b&&c?y(e):(c=l=void 0,p)}function v(){var e=s(),t=w(e);if(c=arguments,l=this,m=e,t){if(void 0===h)return function(e){return g=e,h=setTimeout(x,n),f?y(e):p}(m);if($)return h=setTimeout(x,n),y(m)}return void 0===h&&(h=setTimeout(x,n)),p}return n=r(n)||0,i(t)&&(f=!!t.leading,d=($="maxWait"in t)?a(r(t.maxWait)||0,n):d,b="trailing"in t?!!t.trailing:b),v.cancel=function(){void 0!==h&&clearTimeout(h),g=0,c=m=l=h=void 0},v.flush=function(){return void 0===h?p:A(s())},v}},244:function(e,n,t){"use strict";var i=t(3);i="default"in i?i.default:i;/^2\./.test(i.version)||i.util.warn("VueClickaway 2.2.2 only supports Vue 2.x, and does not support Vue "+i.version);var s="_vue_clickaway_handler";function r(e,n,t){o(e);var i=t.context,r=n.value;if("function"==typeof r){var a=!1;setTimeout(function(){a=!0},0),e[s]=function(n){var t=n.path||(n.composedPath?n.composedPath():void 0);if(a&&(t?t.indexOf(e)<0:!e.contains(n.target)))return r.call(i,n)},document.documentElement.addEventListener("click",e[s],!1)}}function o(e){document.documentElement.removeEventListener("click",e[s],!1),delete e[s]}var a={bind:r,update:function(e,n){n.value!==n.oldValue&&r(e,n)},unbind:o},u={directives:{onClickaway:a}};n.version="2.2.2",n.directive=a,n.mixin=u},480:function(e,n,t){var i=t(20);e.exports=function(){return i.Date.now()}},481:function(e,n,t){"use strict";var i=t(113);t.n(i).a},482:function(e,n,t){(e.exports=t(18)(!0)).push([e.i,"\nimg {\n  border: none;\n}\n.search__wrapper #header-searchform .search-delete.is-visible {\n  display: inline;\n}\n#search-section.search__wrapper--fullscreen {\n  position: fixed;\n  -webkit-overflow-scrolling: touch;\n  padding-top: 0.4rem;\n  padding-left: 0.4rem;\n  background: #128ced;\n  z-index: 350;\n}\n.search__wrapper--fullscreen #searchform .nav-search {\n  width: calc(100% - 5.5rem);\n}\n.search__wrapper--fullscreen #searchform .delete-text {\n  right: 5.5rem;\n}\n.search__wrapper--fullscreen .cancel-search {\n  position: absolute;\n  right: 0;\n  top: 0.9rem;\n  color: #ffffff;\n  font-size: 1.4rem;\n}\n@media (min-width: 640px) {\n.search__wrapper {\n    position: relative;\n    margin-left: 17.5rem;\n}\n}\n.search__wrapper--has-suggestions #header-searchform {\n  border-radius: 0.5rem 0.5rem 0 0;\n}\n.search__wrapper--has-suggestions .search__suggestions {\n  display: block;\n  position: absolute;\n  top: 5.2rem;\n  left: 0;\n  right: 0;\n  overflow-y: auto;\n}\n@media (min-width: 640px) {\n.search__wrapper--has-suggestions .search__suggestions {\n      top: 4.9rem;\n}\n.bd-account .search__wrapper--has-suggestions .search__suggestions {\n        top: 4.5rem;\n}\n}\n.search__wrapper .highlight {\n  font-weight: normal;\n}\n.search__suggestions {\n  display: none;\n  position: absolute;\n  width: 100%;\n  top: 4.9rem;\n  padding: 0;\n  list-style: none;\n  background: #ffffff;\n  border: 0.1rem solid #dddddd;\n  box-shadow: 0 0.1rem 0 0 #cccccc, 0 0.2rem 0.4rem 0 rgba(0, 0, 0, 0.2);\n}\n.cw-fixed-nav .search__suggestions {\n    top: 3.9rem;\n}\n@media (max-width: 639px) {\n.search__wrapper--fullscreen .search__suggestions {\n      height: 100vh;\n      padding-bottom: 50vh;\n      display: block;\n      position: absolute;\n      top: 5.1rem;\n      left: 0;\n      right: 0;\n      overflow-y: auto;\n}\n}\n.search__suggestions-item {\n    margin: 0;\n    padding: 1.2rem 1.5rem;\n    font-size: 1.6rem;\n    color: #333333;\n    cursor: pointer;\n    font-weight: bold;\n}\n.empty-search .search__suggestions-item {\n      font-weight: normal;\n}\n.search__suggestions-item:hover, .search__suggestions-item:focus, .search__suggestions-item--is-focused {\n      background: #eeeeee;\n}\n.iOSFix {\n  position: relative;\n  height: 100%;\n  overflow: hidden;\n}\n.iOSFix #branch-banner-iframe {\n    display: none;\n}\n","",{version:3,sources:["/usr/local/bamboo/data/xml-data/build-dir/44302338/DEV-SF1366-JOB1/src/main/sass/_helpers.scss","/usr/local/bamboo/data/xml-data/build-dir/44302338/DEV-SF1366-JOB1/src/main/js/vue/sfw-search-autocomplete/sfw-search-autocomplete.scss","/usr/local/bamboo/data/xml-data/build-dir/44302338/DEV-SF1366-JOB1/src/main/sass/partials/_variables.scss","/usr/local/bamboo/data/xml-data/build-dir/44302338/DEV-SF1366-JOB1/node_modules/include-media/dist/_include-media.scss"],names:[],mappings:";AA8DA;EACE,aAAY;CACb;AC7DD;EAEI,gBAAe;CAChB;AAGS;EACN,gBAAe;EACf,kCAAiC;EACjC,oBAAmB;EACnB,qBAAoB;EACpB,oBCDa;EDEb,aAAY;CACb;AARF;EAYK,2BAA0B;CAC3B;AAbJ;EAgBK,cAAa;CACd;AAjBJ;EAqBG,mBAAkB;EAClB,SAAQ;EACR,YAAW;EACX,eC1BS;ED2BT,kBAAiB;CAClB;AE+gBD;AF9iBJ;IAmCI,mBAAkB;IAClB,qBAAoB;CA8BvB;CAAA;AA3BE;EAEG,iCAAgC;CACjC;AAHF;EAMG,eAAc;EACd,mBAAkB;EAClB,YAAW;EACX,QAAO;EACP,SAAQ;EACR,iBAAgB;CAUjB;AEkfD;AFvgBD;MAeK,YAAW;CAMd;AAJW;QACN,YAAW;CACZ;CAAA;AA1DT;EAgEI,oBAAmB;CACpB;AAGH;EACE,cAAa;EACb,mBAAkB;EAClB,YAAW;EACX,YAAW;EAmBX,WAAU;EACV,iBAAgB;EAChB,oBC1Fa;ED2Fb,6BCDsB;EDEtB,uEC3Fa;CDgHd;AA1CS;IACN,YAAW;CACZ;AEkeC;AFheM;MAEJ,cAAa;MACb,qBAAoB;MACpB,eAAc;MACd,mBAAkB;MAClB,YAAW;MACX,QAAO;MACP,SAAQ;MACR,iBAAgB;CAEnB;CAAA;AAQD;IACE,UAAS;IACT,uBAAsB;IACtB,kBAAiB;IACjB,eC/FgB;IDgGhB,gBAAe;IAEf,kBAAiB;CAWlB;AATS;MACN,oBAAmB;CACpB;AAXF;MAgBG,oBCnBgB;CDoBjB;AAIL;EACE,mBAAkB;EAClB,aAAY;EACZ,iBAAgB;CAKjB;AARD;IAMI,cAAa;CACd",file:"sfw-search-autocomplete.vue?vue&type=style&index=0&lang=scss&",sourcesContent:["////\n/// Helper mixins for reseting default spacing on HTML elements.\n////\n\n/// Reset the spacing and list-style on a list-type element.\n@mixin sfw-reset-list {\n  margin: {\n    top: 0;\n    bottom: 0;\n  };\n  padding: {\n    right: 0;\n    left: 0;\n  };\n  list-style-type: none;\n}\n\n/// Reset the spacing on an `<li>` element.\n@mixin sfw-reset-li {\n  margin: 0;\n}\n\n/// Reset the spacing on a header element.\n@mixin sfw-reset-header {\n  margin: {\n    top: 0;\n    bottom: 0;\n  };\n  padding-top: 0;\n}\n\n/// Reset the spacing on `<p>` elements.\n@mixin sfw-reset-p {\n  margin: {\n    top: 0;\n    bottom: 0;\n  }\n}\n\n/// Reset the spacing on `<table>` elements.\n@mixin sfw-reset-table {\n  margin: 0 auto;\n}\n\n/// Reset the spacing on `<td>` elements.\n@mixin sfw-reset-td {\n  margin: 0;\n  padding: 0;\n}\n\n/// Reset font family.\n@mixin sfw-reset-font-family {\n  font-family: Arial, Helvetica, sans-serif;\n}\n\n// Reset color on `<sup>` elements.\n@mixin sfw-reset-sup {\n  color: inherit;\n}\n\n\n\nimg {\n  border: none;\n}",'@import "../../../sass/partials/variables";\n@import "~@chewy/design-system/src/sass-lib/base";\n\n.search__wrapper {\n  #header-searchform .search-delete.is-visible {\n    display: inline;\n  }\n\n  &--fullscreen {\n    @at-root #search-section#{&} {\n      position: fixed;\n      -webkit-overflow-scrolling: touch;\n      padding-top: 0.4rem;\n      padding-left: 0.4rem;\n      background: $chewyBlue;\n      z-index: 350;\n    }\n\n    #searchform {\n      .nav-search {\n        width: calc(100% - 5.5rem);\n      }\n\n      .delete-text {\n        right: 5.5rem;\n      }\n    }\n\n    .cancel-search {\n      position: absolute;\n      right: 0;\n      top: 0.9rem; // Align vertically\n      color: $white;\n      font-size: 1.4rem;\n    }\n  }\n\n  @include cw-media(min-medium) {\n    position: relative;\n    margin-left: 17.5rem;\n  }\n\n  &--has-suggestions {\n    #header-searchform {\n      border-radius: 0.5rem 0.5rem 0 0;\n    }\n\n    .search__suggestions {\n      display: block;\n      position: absolute;\n      top: 5.2rem; // Just below the blue\n      left: 0;\n      right: 0;\n      overflow-y: auto;\n\n      @include cw-media(min-medium) {\n        // Change to new breakpoint in CDS 2.0\n        top: 4.9rem;\n\n        @at-root .bd-account #{&} {\n          top: 4.5rem;\n        }\n      }\n    }\n  }\n\n  .highlight {\n    font-weight: normal;\n  }\n}\n\n.search__suggestions {\n  display: none;\n  position: absolute;\n  width: 100%;\n  top: 4.9rem; // Align just below the search box\n\n  @at-root .cw-fixed-nav #{&} {\n    top: 3.9rem; // Align when header is sticky\n  }\n\n  @at-root .search__wrapper--fullscreen #{&} {\n    @include cw-media(small) {\n      height: 100vh;\n      padding-bottom: 50vh;\n      display: block;\n      position: absolute;\n      top: 5.1rem; // Just below the blue\n      left: 0;\n      right: 0;\n      overflow-y: auto;\n    }\n  }\n\n  padding: 0;\n  list-style: none;\n  background: $white;\n  border: 0.1rem solid $chewyLtGreyBdr;\n  box-shadow: 0 0.1rem 0 0 $chewyGreyBdr, 0 0.2rem 0.4rem 0 rgba($black, 0.2);\n\n  &-item {\n    margin: 0;\n    padding: 1.2rem 1.5rem;\n    font-size: 1.6rem;\n    color: $chewyText;\n    cursor: pointer;\n\n    font-weight: bold;\n\n    @at-root .empty-search #{&} {\n      font-weight: normal; // Bold only for completions.\n    }\n\n    &:hover,\n    &:focus,\n    &--is-focused {\n      background: $chewyBtnGrey;\n    }\n  }\n}\n\n.iOSFix {\n  position: relative;\n  height: 100%;\n  overflow: hidden;\n\n  #branch-banner-iframe {\n    display: none;\n  }\n}\n',"@import \"../base\";\n\n////////////\n// UI KIT //\n////////////\n\n$white: #ffffff;\n$black: #000000;\n\n$chewyText : #333333;   //primary text color\n$chewyTextSec: #555555; //secondary text color\n$chewyTextSoft: #999999; //secondary text color\n\n$chewyBlue: #128ced;\n$chewyDkBlue: #163977;\n$chewyOrange: #ef6C00;\n$chewySoftOrange: #f5a623;\n$chewyHighlightOrange: #fbf3e6;\n$chewyYellow: #f8d71c;\n$chewyYellowBg: #ffec00;\n$chewyRed: #b32605;\n$autoshipBlue: #18499B;\n\n$chewyGreen: #4caf50;\n\n// Background\n$chewyBgGrey: #f5f5f5;\n$chewyBgLtGrey: #f9f9f9;\n$chewyBgPage: #fcfcfc;\n\n// Buttons\n$chewyBtn : #dddddd;\n$chewyBtnDisabled : #f2f2f2;\n\n$chewyOutlineGrey : #9b9b9b;\n$chewyLabelGrey: $chewyOutlineGrey;\n$chewyMercury: #e6e6e6;\n\n// Orange gradient\n$chewyOrangeStart : #ed9232;\n$chewyOrangeEnd : $chewyOrange;\n$chewyOrangeEndNew : #d76101;\n\n// Blue gradient\n$chewyBlueStart : #57a7f5;\n$chewyBlueEnd : $chewyBlue;\n\n// Desktop Red\n$chewyRedTxt: #d0011B;\n\n// Your account headers\n$chewyYourAccountHeadersBg: #0d5ea1;\n\n///////////////////////\n// TO REASSIGN BLOCK //\n///////////////////////\n\n$wtgrey: $chewyBgGrey;\n$chewyGreyWt: $chewyBgLtGrey;\n\n$chewyTxtGrey: $chewyText;\n$bftxtgrey: $chewyText;\n\n$chewyGrey: $chewyTextSec;\n\n$pggrey: $chewyOutlineGrey;\n$chewyMidGrey: $chewyOutlineGrey;\n$chewyBtnBdrGrey: $chewyOutlineGrey;\n\n\n//////////\n// Site //\n//////////\n\n$priceRed: #D0021B;\n\n// Main Navigation\n$lgNav: 45px;\n$smNav: 35px;\n\n////////////\n// LEGACY //\n////////////\n\n$cyan: #019cfd;\n$dkblue: #014ea4;\n$ltblue: #edf8fa;\n\n$txtgrey: #444444;\n\n$ltgrey: #666666;\n$bdrgrey: #dadada;\n\n$chewyDkBdrGrey: #4a4a4a;\n\n$chewyGreyBdr: #cccccc;\n$chewyLtGreyBdr: #dddddd;\n$chewyBtnGrey: #eeeeee;\n\n$chewyGreyGradient: #e8e8e8;\n$chewyGreyReviewBdr: #dfdfdf;\n$chewyLtOrange: #f08d3b;\n\n// Mobile : About Us\n// move to CMS\n\n$abtltblue: #f2fbfe;\n$abtdkblue: #014ea4;\n\n$abtbdrgrey: #c6cbcc;\n$abttxtgrey: $chewyDkBdrGrey;\n\n$abtorange: #f57200;\n$abtbdrorange: #e56700;\n\n\n///////////////////\n// MEDIA QUERIES //\n///////////////////\n\n$phone-width: 320px;\n$tablet-min-width: 750px;\n$ipad-width: 768px;\n$ipad-lg-width: 1024px;\n$desktop-width: 970px;\n$desktop-lg-width: 1250px;\n$desktop-xl-width: 1400px;\n$ie-desktop-width: $desktop-width - 40;\n\n//include-media variables\n$_sfw-breakpoints: (\n  'phone': $phone-width,\n  'tabletmin' : $tablet-min-width,\n  'ipad': $ipad-width,\n  'ipadlg': $ipad-lg-width,\n  'desktop': $desktop-width,\n  'desktoplg': $desktop-lg-width,\n  'desktopxl': $desktop-xl-width\n);\n\n// Make sure that CDS breakpoints are not lost if they exist.\n@if not global-variable-exists(breakpoints) {\n  $breakpoints: () !global;\n}\n$_breaks: cw-storage-queries-breakpoints-set($_sfw-breakpoints);\n$_breaks: cw-storage-queries-breakpoints-convert();\n\n// Checking if $im-media-support exists\n//@if variable_exists(im-media-support) != true {\n//\t$im-media-support: true;\n//}\n$im-no-media-breakpoint: 'desktop';\n","@charset \"UTF-8\";\n\n//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v1.4.9\n//\n//                http://include-media.com\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Hugo Giraudel (@hugogiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n\n\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n  'phone': 320px,\n  'tablet': 768px,\n  'desktop': 1024px\n) !default;\n\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n  'screen': 'screen',\n  'print': 'print',\n  'handheld': 'handheld',\n  'landscape': '(orientation: landscape)',\n  'portrait': '(orientation: portrait)',\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\n) !default;\n\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  'px': 1,\n  'em': 0.01,\n  'rem': 0.1,\n  '': 0\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: 'desktop' !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\n\n////\n/// Cross-engine logging engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function im-log($message) {\n  @if feature-exists('at-error') {\n    @error $message;\n  } @else {\n    @warn $message;\n    $_: noop();\n  }\n\n  @return $message;\n}\n\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if im-log($message) {}\n}\n\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\n  }\n\n  @each $condition in $conditions {\n    @if not map-has-key($media-expressions, $condition) {\n      $operator: get-expression-operator($condition);\n      $prefix: get-expression-prefix($operator);\n      $value: get-expression-value($condition, $operator);\n\n      // scss-lint:disable SpaceAroundOperator\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\n        @return false;\n      }\n    } @else if not index($im-no-media-expressions, $condition) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\n    @if str-index($expression, $operator) {\n      @return $operator;\n    }\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n  $_: im-log('No operator found in `#{$expression}`.');\n}\n\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\n  $dimension: 'width';\n\n  @if str-length($parsed-dimension) > 0 {\n    $dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\n}\n\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $value: str-slice($expression, $operator-index + str-length($operator));\n\n  @if map-has-key($breakpoints, $value) {\n    $value: map-get($breakpoints, $value);\n  } @else {\n    $value: to-number($value);\n  }\n\n  $interval: map-get($unit-intervals, unit($value));\n\n  @if not $interval {\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n    $_: im-log('Unknown unit `#{unit($value)}`.');\n  }\n\n  @if $operator == '>' {\n    $value: $value + $interval;\n  } @else if $operator == '<' {\n    $value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map-has-key($media-expressions, $expression) {\n    @return map-get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: length($list)) {\n  @if length($list) < 1 or $start > $end {\n    @return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: append($result, nth($list, $i));\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n@function to-number($value) {\n  @if type-of($value) == 'number' {\n    @return $value;\n  } @else if type-of($value) != 'string' {\n    $_: im-log('Value for `to-number` should be a number or a string.');\n  }\n\n  $first-character: str-slice($value, 1, 1);\n  $result: 0;\n  $digits: 0;\n  $minus: ($first-character == '-');\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\n\n  // Remove +/- sign if present at first character\n  @if ($first-character == '+' or $first-character == '-') {\n    $value: str-slice($value, 2);\n  }\n\n  @for $i from 1 through str-length($value) {\n    $character: str-slice($value, $i, $i);\n\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\n    }\n\n    @if $character == '.' {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map-get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + map-get($numbers, $character) / $digits;\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\n\n  @if not index(map-keys($units), $unit) {\n    $_: im-log('Invalid unit `#{$unit}`.');\n  }\n\n  @return $value * map-get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Hugo Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n  // scss-lint:disable SpaceAroundOperator\n  @if ($im-media-support and length($conditions) == 0) or\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\n    @content;\n  } @else if ($im-media-support and length($conditions) > 0) {\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\n      // Recursive call\n      @include media(slice($conditions, 2)...) {\n        @content;\n      }\n    }\n  }\n}\n"],sourceRoot:""}])},531:function(e,n,t){"use strict";t.r(n);var i=t(3),s=t(243),r=t.n(s),o={props:{query:{type:String,default:""},suggestion:{type:String,required:!0,default:""},index:{type:Number,required:!0},currentlyFocused:{type:Number,required:!0}},data:function(){return{prefix:"",match:"",suffix:"",rest:""}},computed:{cleanedUpQuery:function(){return this.query.trim().toLowerCase()},splitSuggestion:function(){return this.cleanedUpQuery?this.suggestion.split(this.cleanedUpQuery).join("<span class='highlight'>".concat(this.cleanedUpQuery,"</span>")):this.suggestion}},methods:{handleClick:function(e){this.$emit("selectItem",e)}}},a=t(0),u=Object(a.a)(o,function(){var e=this,n=e.$createElement;return(e._self._c||n)("li",{staticClass:"search__suggestions-item",class:{"search__suggestions-item--is-focused":e.index===e.currentlyFocused},attrs:{role:"option"},domProps:{innerHTML:e._s(e.splitSuggestion)},on:{click:function(n){e.handleClick(e.suggestion)}}})},[],!1,null,null,null);u.options.__file="sfw-autocomplete-item.vue";var c=u.exports,l=t(53),d=t(244),p=t(2),h={props:{dataQuery:{type:String,default:""}},data:function(){return{hasSuggestions:!1,showSuggestions:!0,query:"",suggestedQuery:"",prefix:"",suggestions:[],currentlyFocused:-1,fullScreen:!1,hasAutocomplete:null,showClearQuery:!1}},directives:{onClickaway:d.directive},computed:{searchListeners:function(){return this.hasAutocomplete?{input:this.updateQuery,click:this.captureInteraction,keyup:this.captureInteraction}:{input:this.updateQuery,keyup:this.captureEnter}},displaySuggestions:function(){return this.showSuggestions&&this.hasSuggestions},isSearchEmpty:function(){return""===this.query.trim()},queryOrSuggestion:function(){return this.displaySuggestions&&this.isAnythingFocused&&this.suggestedQuery?this.suggestedQuery:this.query},isShowClearQueryVisible:function(){return this.isMobileView?this.queryOrSuggestion:this.isDesktopView?this.queryOrSuggestion||this.showClearQuery:void 0},isAnythingFocused:function(){return this.currentlyFocused>=0},isNothingFocused:function(){return-1===this.currentlyFocused},isFirstFocused:function(){return 0===this.currentlyFocused},isLastFocused:function(){return this.currentlyFocused===this.suggestions.length-1}},components:{SfwAutocompleteItem:c,CwMutateDocument:l.a},methods:{buildSearchUrl:function(e){return"".concat("/app/rest/suggestions/autocompletions","?searchTerm=").concat(this.buildQueryParam(e))},buildQueryParam:function(e){return e.trim()?encodeURIComponent(e):'""'},handleSearchResponse:function(e){var n=e.prefix,t=e.suggestions;this.hasSuggestions=t.length>0,this.suggestions=t,this.prefix=n,this.hasSuggestions&&(this.showSuggestions=!0,this.setShowClearQuery())},isModifierKeyPressed:function(e){return e.altKey||e.shiftKey||e.ctrlKey||e.metaKey},shouldAutocomplete:function(e){null===this.hasAutocomplete&&(this.hasAutocomplete="AUTOCOMPLETE"===this.triggerOptimizely()),this.hasAutocomplete&&!e.target.classList.contains("search-delete")&&this.captureInteraction(e),this.$refs.searchInput.removeEventListener("click",this.shouldAutocomplete),this.$refs.searchInput.removeEventListener("keyup",this.shouldAutocomplete),this.$refs.clearQuery.removeEventListener("click",this.shouldAutocomplete)},triggerOptimizely:function(){if(window.chewy&&window.chewy.optimizelyClient)return window.chewy.optimizelyClient.safeActivate("2018_10_SEARCH_AUTOCOMPLETE")},setShowClearQuery:function(){this.showClearQuery=!0},unsetShowClearQuery:function(){this.showClearQuery=!1},captureInteraction:function(e){var n=e.type,t=e.key;if("submit"===n&&(e.preventDefault(),this.handleEnter()),"click"===n&&(this.isMobileView&&this.enterFullScreen(),this.isDesktopView&&this.setShowClearQuery(),this.debouncedSearch(this.buildSearchUrl(this.query))),"keyup"===n)switch(t){case"ArrowUp":case"Up":e.preventDefault(),this.showSuggestions&&this.focusPreviousItem();break;case"ArrowDown":case"Down":e.preventDefault(),this.showSuggestions&&this.focusNextItem();break;case"Escape":case"Esc":this.handleEscape();break;case"Enter":this.handleEnter();break;case"Backspace":case"Delete":case"Del":this.resetCurrentlyFocused(),this.debouncedSearch(this.buildSearchUrl(this.query));break;case"ArrowLeft":case"Left":case"ArrowRight":case"Right":case"Shift":case"Meta":case"Alt":this.isAnythingFocused&&this.isModifierKeyPressed(e)&&(this.query=this.suggestedQuery,this.resetCurrentlyFocused());break;default:this.isSearchEmpty&&this.resetSuggestedQuery(),this.isAnythingFocused&&this.resetCurrentlyFocused(),this.debouncedSearch(this.buildSearchUrl(this.query))}},captureEnter:function(e){"Enter"===e.key&&this.handleEnter()},handleEscape:function(e){e&&e.target.classList.contains("btn-search")?this.handleEnter():(this.hideSuggestions(),this.resetSuggestedQuery(),this.unsetShowClearQuery())},handleEnter:function(){this.queryOrSuggestion&&(this.isAnythingFocused?(this.performSearch(this.suggestedQuery),this.emitGA("Submit-autocomplete",this.suggestedQuery)):(this.performSearch(this.query),this.emitGA("Submit-userinput",this.query)))},enterFullScreen:function(){this.fullScreen=!0,document.body.classList.add("iOSFix"),document.querySelector("html").classList.add("iOSFix")},exitFullScreen:function(){this.fullScreen=!1,this.hideSuggestions(),document.body.classList.remove("iOSFix"),document.querySelector("html").classList.remove("iOSFix")},updateQuery:function(e){this.resetCurrentlyFocused(),this.query=e.target.value},resetCurrentlyFocused:function(){this.currentlyFocused=-1},getSuggestions:function(e){return $.get(e).then(this.handleSearchResponse)},hideSuggestions:function(){this.showSuggestions=!1},focusSuggestion:function(e){this.currentlyFocused=e,this.updateSuggestedQuery(e)},updateSuggestedQuery:function(e){this.suggestedQuery=this.suggestions[e]},resetSuggestedQuery:function(){this.suggestedQuery=""},focusNextItem:function(){this.isNothingFocused||this.isLastFocused?this.focusSuggestion(0):this.focusSuggestion(this.currentlyFocused+1)},focusPreviousItem:function(){this.isNothingFocused||this.isFirstFocused?this.focusSuggestion(this.suggestions.length-1):this.focusSuggestion(this.currentlyFocused-1)},performSearch:function(e){this.query=e,this.showSuggestions=!1,window.location.href="/s?query=".concat(this.buildQueryParam(e))},handleItemClick:function(e){this.performSearch(e),this.emitGA("Submit-autocomplete",e)},emitGA:function(e,n){Object(p.c)({context:{action:e,label:n,category:"Search Form"}})},clearQuery:function(){this.query="",this.suggestedQuery="",this.$refs.searchInput.focus(),this.isDesktopView&&(this.showSuggestions=!1)}},created:function(){this.debouncedSearch=r()(this.getSuggestions,200)},mounted:function(){this.query=this.dataQuery,this.$refs.searchForm.addEventListener("submit",this.captureInteraction),this.$refs.searchInput.addEventListener("click",this.shouldAutocomplete),this.$refs.searchInput.addEventListener("keyup",this.shouldAutocomplete),this.$refs.clearQuery.addEventListener("click",this.shouldAutocomplete)}},m=(t(481),Object(a.a)(h,function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("cw-mutate-document",{attrs:{"enable-body-scroll":!e.fullScreen}},[t("section",{staticClass:"search__wrapper",class:{"empty-search":e.isSearchEmpty,"search__wrapper--has-suggestions":e.displaySuggestions,"search__wrapper--fullscreen":e.isMobileView&&e.fullScreen},attrs:{id:e.isMobileView?"search-section":null}},[t("form",{ref:"searchForm",attrs:{id:e.isMobileView?"searchform":"header-searchform",role:"form",action:"/s"}},[t("input",e._g({directives:[{name:"on-clickaway",rawName:"v-on-clickaway",value:e.handleEscape,expression:"handleEscape"}],ref:"searchInput",staticClass:"nav-search nav-search-field",attrs:{id:"query search-autocomplete",type:"search",name:"query",autocomplete:"off",autocorrect:"off",placeholder:"Find the best for your pet...",role:e.hasAutocomplete?"combobox":"search","aria-controls":"search__suggestions","aria-haspopup":"listbox","aria-expanded":e.displaySuggestions,"aria-label":"Find the best for your pet..."},domProps:{value:e.queryOrSuggestion}},e.searchListeners)),e._v(" "),e.isDesktopView?t("button",{staticClass:"btn-search",attrs:{type:"submit",name:"nav-submit-button"}}):e._e(),e._v(" "),t("a",{ref:"clearQuery",staticClass:"search-delete delete-text",class:{"is-visible":e.isShowClearQueryVisible},attrs:{href:"#"},on:{click:function(n){return n.preventDefault(),n.stopPropagation(),e.clearQuery(n)}}}),e._v(" "),e.fullScreen?t("a",{staticClass:"cancel-search",attrs:{href:"#"},on:{click:function(n){return n.preventDefault(),e.exitFullScreen(n)}}},[e._v("\n        Cancel\n      ")]):e._e()]),e._v(" "),e.hasAutocomplete?t("ul",{staticClass:"search__suggestions",attrs:{id:"search__suggestions",role:"listbox","aria-labelledby":"search-autocomplete"}},e._l(e.suggestions,function(n,i){return t("sfw-autocomplete-item",{key:n+i,attrs:{query:e.query,index:i,"currently-focused":e.currentlyFocused,suggestion:n},on:{selectItem:e.handleItemClick}})})):e._e()])])},[],!1,null,null,null));m.options.__file="sfw-search-autocomplete.vue";var g=m.exports,f=t(7),b=document.getElementById("vue-mount__search__autocomplete");b&&new i.default({el:b,render:function(e){return e(g,{props:Object(f.a)(b)})}})}},[[531,0,1]]]);
//# sourceMappingURL=search-autocomplete.590ab74b8ce08b945eb2.packaged.js.map